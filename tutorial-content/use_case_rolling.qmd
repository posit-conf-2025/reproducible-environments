---
title: "You've got to roll with it"
format: revealjs
---

## Adopting new tools 

- At Novartis we were testing the {rbmi} package for multiple imputation
- We weren't able to reproduce our results 
- The underlying algorithm is deterministic so this shouldn't be the case
- The magnitude of the difference was enough to change the scientific conclusions

## Reproducibility Detective Work

**Did we set the seed?** *Yes!*  
**Is this related to hardware?** *No!*   
**Is this a problem with a specific OS linear algebra library?** *No!*  
**Injected custom code into {rbmi} to localise the issue:** *Problem originates from {rbmi} dependencies.*     

![](images/rbmi_deps.png)


## Collaborated with package maintainers to implement the fix

![](images/timeline.png)

- ~3 weeks from issue identification to fix deployed at source  
- Highly collaborative package maintainers - THANK YOU!!   

## Deployment at Novartis{.smaller}

```{mermaid}
timeline
    title Frozen R environments with ~6 month refresh
    H123 : R4.1.0 bundle 1
    H223 : R4.1.0 bundle 2
    H124 : R4.3.1 bundle 1
    H224 : R4.3.1 bundle 2
         : Project-level bundle using an adhoc, GxP install

```

- Current package management is a hybrid of frozen and rolling
- The rolling update is essential so we can use the latest, corrected version of packages
- Implementation of rolling update not yet connected with tools like PPM

## Conclusions

- The packages we rely on are in a constant state of flux: this is a feature not a bug! 
- Our approach to package management needs to be fit-for-purpose and enabling timley access to the latest versions 

